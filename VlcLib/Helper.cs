using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using VlcLib.Media;


namespace VlcLib
{
    public static class Helper
    {
        private static string[] audiofileExt = new string[] { "2sf", "2sflib", "3ga", "4mp", "5xb", "5xs", "669", "6cm", "8cm", "8med", "8svx", "a2b", "a2i", "a2m", "a2p", "a2t", "a2w", "a52", "aa", "aa3", "aac", "aax", "ab", "abc", "abm", "ac3", "acd", "ac", "ac", "acm", "acp", "act", "adg", "adt", "adts", "adv", "afc", "agm", "agr", "ahx", "aif", "aifc", "aiff", "aimppl", "ais", "akp", "al", "alac", "alaw", "alc", "all", "als", "amf", "amr", "ams", "ams", "amxd", "amz", "aob", "ape", "apf", "apl", "aria", "ariax", "asd", "ase", "at3", "atrac", "au", "au", "aud", "aup", "avastsounds", "avr", "awb", "ay", "b4s", "band", "bap", "bcs", "bdd", "bidule", "bnk", "bonk", "box", "brstm", "bun", "bwf", "bwg", "bww", "c01", "caf", "caff", "cda", "cdda", "cdlx", "cdo", "cdr", "cel", "cfa", "cfxr", "cgrp", "cidb", "ckb", "ckf", "cmf", "conform", "copy", "cpr", "cpt", "csh", "cts", "cwb", "cwp", "cwt", "d00", "d01", "dcf", "dcm", "dct", "ddt", "dewf", "df2", "dfc", "dff", "dig", "dig", "djr", "dls", "dm", "dmc", "dmf", "dmsa", "dmse", "dra", "drg", "ds", "ds2", "dsf", "dsm", "dsp", "dss", "dtm", "dts", "dtshd", "dvf", "dw", "dwa", "dwd", "ear", "efa", "efe", "efk", "efq", "efs", "efv", "emd", "emp", "emx", "emy", "eop", "esps", "evr", "expressionmap", "f2r", "f32", "f3r", "f4a", "f64", "far", "fda", "fdp", "fev", "fff", "flac", "flp", "fls", "fpa", "frg", "fsb", "fsm", "ftm", "ftm", "ftmx", "fzb", "fzf", "fzv", "g721", "g723", "g726", "gbproj", "gbs", "gig", "gio", "gio", "gm", "gp5", "gpbank", "gpk", "gpx", "gro", "groove", "gsm", "gsm", "h0", "h5b", "h5e", "h5s", "hbs", "hdp", "hma", "hmi", "hsb", "iaa", "ics", "iff", "igp", "igr", "imf", "imp", "ins", "ins", "ins", "isma", "it", "iti", "itls", "its", "jam", "jam", "jo", "j", "k25", "k26", "kar", "kfn", "kin", "kit", "kmp", "koz", "koz", "kpl", "krz", "ksc", "ksd", "ksf", "ksm", "kt2", "kt3", "ktp", "l", "la", "lof", "logic", "lqt", "lso", "lvp", "lwv", "m1a", "m3u", "m3u8", "m4a", "m4b", "m4p", "m4r", "ma1", "mbr", "mdc", "mdl", "med", "mgv", "mid", "midi", "mini2sf", "minincsf", "minipsf", "minipsf2", "miniusf", "mka", "mlp", "mmf", "mmm", "mmp", "mmp", "mmpz", "mo3", "mod", "mogg", "mp1", "mp2", "mp3", "mp_", "mpa", "mpc", "mpdp", "mpga", "mpu", "mscx", "mscz", "msv", "mt2", "mt9", "mte", "mtf", "mti", "mtm", "mtp", "mts", "mu3", "mui", "mus", "mus", "mus", "musa", "musx", "mux", "mux", "muz", "mwand", "mws", "mx3", "mx4", "mx5", "mx5template", "mxl", "mxmf", "myr", "mzp", "nap", "narrative", "nbs", "ncw", "nkb", "nkc", "nki", "nkm", "nks", "nkx", "nml", "nmsv", "note", "npl", "nra", "nrt", "nsa", "nsf", "nst", "ntn", "nvf", "nwc", "obw", "odm", "ofr", "oga", "ogg", "okt", "oma", "omf", "omg", "omx", "opus", "orc", "ots", "ove", "ovw", "ovw", "pac", "pandora", "pat", "pbf", "pca", "pcast", "pcg", "pcm", "pd", "peak", "pek", "pho", "phy", "pjunoxl", "pk", "pkf", "pla", "pls", "plst", "ply", "pna", "pno", "ppc", "ppcx", "prg", "prg", "psf", "psf1", "psf2", "psm", "psy", "ptcop", "ptf", "ptm", "pts", "ptx", "pvc", "q1", "q2", "qcp", "r", "r1m", "ra", "rad", "ram", "raw", "rax", "rbs", "rbs", "rcy", "record", "rex", "rfl", "rgrp", "rip", "rmf", "rmi", "rmj", "rmm", "rmx", "rng", "rns", "rol", "rsf", "rsn", "rso", "rta", "rti", "rtm", "rts", "rvx", "rx2", "s3i", "s3m", "s3z", "saf", "sam", "sap", "sb", "sbg", "sbi", "sbk", "sc2", "scs11", "sd", "sd", "sd2", "sd2f", "sdat", "sdii", "sds", "sdt", "sdx", "seg", "seq", "ses", "sesx", "sf", "sf2", "sfap0", "sfk", "sfl", "sfpack", "sfs", "sgp", "shn", "sib", "sid", "slp", "slx", "sma", "smf", "smp", "smp", "smpx", "snd", "snd", "snd", "sng", "sng", "sns", "snsf", "sou", "sph", "sppack", "sprg", "spx", "sseq", "sseq", "ssnd", "stap", "sth", "sti", "stm", "stw", "stx", "sty", "sty", "svd", "svx", "sw", "swa", "swav", "sxt", "syh", "syn", "syn", "syw", "syx", "tak", "tak", "td0", "tfmx", "tg", "thx", "tm2", "tm8", "tmc", "toc", "trak", "tsp", "tta", "tun", "txw", "u", "u8", "uax", "ub", "ulaw", "ult", "ulw", "uni", "usf", "usflib", "ust", "uw", "uwf", "v2m", "vag", "val", "vap", "vb", "vc3", "vdj", "vgm", "vgz", "vlc", "vmd", "vmf", "vmf", "vmo", "voc", "voi", "vox", "voxal", "vpl", "vpm", "vpw", "vqf", "vrf", "vsq", "vtx", "vyf", "w01", "w64", "wand", "wav", "wav", "wave", "wax", "wem", "wfb", "wfd", "wfm", "wfp", "wma", "wow", "wpk", "wpp", "wproj", "wrk", "wtpl", "wtpt", "wus", "wut", "wv", "wvc", "wve", "wwu", "wyz", "xa", "xa", "xfs", "xi", "xm", "xmf", "xmi", "xmz", "xp", "xpf", "xrns", "xsb", "xsp", "xspf", "xt", "xwb", "ym", "yookoo", "zab", "zpa", "zpl", "zvd", "zvr" };
        private static string[] videofileExt = new string[] { "264", "3g2", "3gp", "3gp2", "3gpp", "3gpp2", "3mm", "3p2", "60d", "787", "890", "aaf", "aec", "aep", "aepx", "aet", "aetx", "ajp", "ale", "am", "amc", "amv", "amx", "anim", "aqt", "arcut", "arf", "asf", "asx", "avb", "avc", "avchd", "avd", "avi", "avp", "avs", "avs", "avv", "awlive", "axm", "bdm", "bdmv", "bdt2", "bdt3", "bik", "bin", "bix", "bmc", "bmk", "bnp", "box", "bs4", "bsf", "bu", "bvr", "byu", "camproj", "camrec", "camv", "ced", "cel", "cine", "cip", "clk", "clpi", "cmmp", "cmmtpl", "cmproj", "cmrec", "cpi", "cst", "cvc", "cx3", "d2v", "d3v", "dash", "dat", "dav", "db2", "dce", "dck", "dcr", "dcr", "ddat", "dif", "dir", "divx", "dlx", "dmb", "dmsd", "dmsd3d", "dmsm", "dmsm3d", "dmss", "dmx", "dnc", "dpa", "dpg", "dream", "dsy", "dv", "d", "dv4", "dvdmedia", "dvr", "dv", "dvx", "dxr", "dzm", "dzp", "dzt", "edl", "evo", "eye", "ezt", "f4f", "f4p", "f4v", "fbr", "fbr", "fbz", "fcp", "fcproject", "ffd", "flc", "flh", "fli", "flv", "flx", "ftc", "gcs", "gfp", "gl", "gom", "grasp", "gts", "gvi", "gvp", "h264", "hdmov", "hdv", "hkm", "ifo", "imovieproj", "imovieproject", "inp", "int", "ircp", "irf", "ism", "ismc", "ismclip", "ismv", "iva", "ivf", "ivr", "ivs", "izz", "izzy", "jmv", "jss", "jts", "jtv", "k3g", "kdenlive", "kmv", "ktn", "lrec", "lrv", "lsf", "lsx", "lvix", "m15", "m1pg", "m1v", "m21", "m21", "m2a", "m2p", "m2t", "m2ts", "m2v", "m4e", "m4u", "m4v", "m75", "mani", "meta", "mgv", "mj2", "mjp", "mjpg", "mk3d", "mkv", "mmv", "mnv", "mob", "mod", "modd", "moff", "moi", "moov", "mov", "movie", "mp21", "mp21", "mp2v", "mp4", "mp", "mp4v", "mpe", "mpeg", "mpeg1", "mpeg4", "mpf", "mpg", "mpg2", "mpgindex", "mpl", "mpl", "mpls", "mpsub", "mpv", "mpv2", "mqv", "msdvd", "mse", "msh", "mswmm", "mts", "mtv", "mvb", "mvc", "mvd", "mve", "mvex", "mvp", "mvp", "mvy", "mxf", "mxv", "mys", "ncor", "nsv", "nut", "nuv", "nvc", "ogm", "ogv", "ogx", "orv", "osp", "otrkey", "pac", "par", "pds", "pgi", "photoshow", "piv", "pjs", "playlist", "plproj", "pmf", "pmv", "pns", "ppj", "prel", "pro", "pro4dvd", "pro5dvd", "proqc", "prproj", "prtl", "psb", "psh", "pssd", "pva", "pvr", "pxv", "qt", "qtch", "qtindex", "qtl", "qtm", "qtz", "r3d", "rcd", "rcproject", "rdb", "rec", "rm", "rmd", "rmd", "rmp", "rms", "rmv", "rmvb", "roq", "rp", "rsx", "rts", "rts", "rum", "rv", "rvid", "rvl", "sbk", "sbt", "scc", "scm", "scm", "scn", "screenflow", "sdv", "sec", "sedprj", "seq", "sfd", "sfvidcap", "siv", "smi", "smi", "smil", "smk", "sml", "smv", "snagproj", "spl", "sqz", "ssf", "ssm", "stl", "str", "stx", "svi", "swf", "swi", "swt", "tda3mt", "tdt", "tdx", "thp", "tid", "tivo", "tix", "tod", "tp", "tp0", "tpd", "tpr", "trp", "ts", "tsp", "ttxt", "tvs", "usf", "usm", "vbc", "vc1", "vcpf", "vcr", "vcv", "vdo", "vdr", "vdx", "veg", "vem", "vep", "vf", "vft", "vfw", "vfz", "vgz", "vid", "video", "viewlet", "viv", "vivo", "vix", "vlab", "vob", "vp3", "vp6", "vp7", "vpj", "vro", "vs4", "vse", "vsp", "w32", "wcp", "webm", "wlmp", "wm", "wmd", "wmmp", "wmv", "wmx", "wot", "wp3", "wpl", "wtv", "wve", "wvx", "xej", "xel", "xesc", "xfl", "xlmv", "xmv", "xvid", "y4m", "yog", "yuv", "zeg", "zm1", "zm2", "zm3", "zmv" };

        public static DateTime UnixTimeStampToDateTime(double unixTimeStamp)
        {
            // Unix timestamp is seconds past epoch
            System.DateTime dtDateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc);
            dtDateTime = dtDateTime.AddSeconds(unixTimeStamp).ToLocalTime();
            return dtDateTime;
        }

        public static MediaType GetMediaType(string fileName)
        {
            MediaType res = MediaType.None;
            var ext = Path.GetExtension(fileName).ToLower();
            ext = ext.Substring(ext.IndexOf('.') + 1);
            if (audiofileExt.Contains(ext))
            {
                res = MediaType.Audio;
            }
            else if (videofileExt.Contains(ext))
            {
                res = MediaType.Video;
            }
            return res;
        }
    }
}
